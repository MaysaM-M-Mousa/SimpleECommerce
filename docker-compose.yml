services:
  inventory.api:
    image: ${DOCKER_REGISTRY-}inventoryapi
    container_name: inventory.api
    build:
      context: .
      dockerfile: source/Inventory/Inventory.Api/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - postgres
      - rabbitmq

  order.api:
    image: ${DOCKER_REGISTRY-}orderapi
    container_name: order.api
    build:
      context: .
      dockerfile: source/Order/Order.Api/Dockerfile
    ports:
      - "5003:5003"
      - "5004:5004"
    depends_on:
      - postgres
      - rabbitmq 

  postgres:
    image: postgres:16
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: MyStrong!Passw0rd
      POSTGRES_DB: SimpleECommerce
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: MyStrong!Passw0rd
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"  # RabbitMQ message broker port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/data

volumes:
  postgres_data:
  rabbitmq_data:
  pgadmin_data: